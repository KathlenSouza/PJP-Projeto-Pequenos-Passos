package com.api.pjpPequenosPassos.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import lombok.*;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.*;

@Entity
@Table(name = "tb_crianca")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Crianca implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    @NotBlank(message = "Nome da criança é obrigatório")
    @Column(nullable = false, length = 80)
    private String nome;

    private Integer idade;

    @Column(length = 20)
    private String sexo;

    @Column(length = 200)
    private String observacoes;

    // Relacionamento ManyToOne: Muitas Crianças para Um Usuário (Lado Proprietário)
    @ManyToOne
    @JoinColumn(name = "usuario_id", nullable = false)
    private Usuario usuario;

    // Relacionamento OneToMany: Uma Criança para Muitas Tarefas
    // MappedBy indica que o campo "crianca" na classe Tarefa é o lado proprietário.
    @OneToMany(mappedBy = "crianca", cascade = CascadeType.ALL, orphanRemoval = true)
    @Builder.Default
    private List<Tarefa> tarefas = new ArrayList<>();

    // Relacionamento OneToMany: Uma Criança para Muitos Diários
    @OneToMany(mappedBy = "crianca", cascade = CascadeType.ALL, orphanRemoval = true)
    @Builder.Default
    private List<Diario> diarios = new ArrayList<>();

    // Relacionamento OneToMany: Uma Criança para Muitas Avaliações de Risco
    @OneToMany(mappedBy = "crianca", cascade = CascadeType.ALL, orphanRemoval = true)
    @Builder.Default
    private List<AvaliacaoRisco> avaliacoesRisco = new ArrayList<>();
}
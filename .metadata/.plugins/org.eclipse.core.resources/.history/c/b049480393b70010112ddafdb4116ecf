package com.api.pjpPequenosPassos.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;
import lombok.*;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

@Entity
@Table(name = "tb_usuario")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Usuario implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    private String nomeCompleto;
    private String nomeUsuario;
    private String email;
    private String senha;
    private String cpf;
    private String genero;
    private String telefone;
    private String dataNascimento;
    private String tipoUsuario;

    // ==== RELACIONAMENTO COM CRIANÇA ====
    @OneToMany(
            mappedBy = "usuario",
            cascade = CascadeType.ALL,
            orphanRemoval = true,
            fetch = FetchType.LAZY
    )
    @Builder.Default
    @JsonManagedReference("usuario-crianca")
    private List<Crianca> criancas = new ArrayList<>();

    // ----------------------------------------------------
    // MÉTODOS AUXILIARES PARA MANTER OS 2 LADOS EM SINC
    // ----------------------------------------------------
    public void addCrianca(Crianca c) {
        if (c == null) return;
        if (criancas == null) {
            criancas = new ArrayList<>();
        }
        criancas.add(c);
        c.setUsuario(this);
    }

    public void removeCrianca(Crianca c) {
        if (c == null || criancas == null) return;
        criancas.remove(c);
        c.setUsuario(null);
    }
}
